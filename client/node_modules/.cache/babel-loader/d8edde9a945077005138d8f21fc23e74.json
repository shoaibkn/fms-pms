{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shoaibkn\\\\Documents\\\\projects\\\\app\\\\client\\\\src\\\\pages\\\\dashboard.js\";\nimport StatsWindow from \"../components/stats-window\";\nimport Frame from \"../components/frame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(props) {\n  let mod = restruct(1);\n  let final = [];\n  mod.forEach((m, i) => final.push( /*#__PURE__*/_jsxDEV(Frame, {\n    values: m,\n    name: gName(i)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 36\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatsWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), final]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} //use module names passed as a prop to structure and create dashboard frames\n//function to break the mod_list array and restructure in different module types\n\n_c = Dashboard;\n\nfunction restruct(c) {\n  //populate this array using sql\n  let mod_list = [\"Bill Receive Form\", \"W/O Bill Receive Form\", \"Courier In\", \"Courier Out\", \"GRN Tasks\", \"Store Tasks\", \"Accounts Tasks\", \"Pending Bills Report\", \"Material Quality Feedback\", \"Quality Passing/Rejection\", \"Quality Feedback Report\", \"PO To Delivery FMS\", \"Order To PO FMS\", \"Projection Email\", \"Pending Material For PO Report\", \"Pending Material For Projection\", \"Order To Collection FMS\", \"Tasks\", \"Pending Tasks Report\"];\n  let g1 = [];\n  let g2 = [];\n  let g3 = [];\n  let g4 = [];\n  let g5 = [];\n  let m1 = [\"Bill Receive Form\", \"W/O Bill Receive Form\", \"Courier In\", \"Courier Out\", \"Bill Transfer Note\", \"Bill Receive Note\", \"GRN Tasks\", \"Store Tasks\", \"Accounts Tasks\", \"Pending Bills Report\"];\n  let m2 = [\"Material Quality Feedback\", \"Quality Passing/Rejection\", \"Quality Feedback Report\"];\n  let m3 = [\"PO To Delivery FMS\", \"Order To PO FMS\", \"Projection Email\", \"Pending Material For PO Report\", \"Pending Material For Projection\"];\n  let m4 = [\"Order To Collection FMS\", \"Tasks\", \"Pending Tasks Report\"];\n  let m5 = [];\n  let m6 = [];\n  let m7 = [];\n  let m8 = [];\n  mod_list.forEach(mod => {\n    if (m1.indexOf(mod) >= 0) {\n      g1.push(mod);\n    } else if (m2.indexOf(mod) >= 0) {\n      g2.push(mod);\n    } else if (m3.indexOf(mod) >= 0) {\n      g3.push(mod);\n    } else if (m4.indexOf(mod) >= 0) {\n      g4.push(mod);\n    } else if (m5.indexOf(mod) >= 0) {\n      g5.push(mod);\n    }\n  });\n  let mArr = [g1, g2, g3, g4];\n\n  switch (c) {\n    case 1:\n      return mArr;\n\n    case 2:\n      return mArr[1];\n\n    default:\n      return \"Invalid\";\n  }\n}\n\nfunction gName(i) {\n  {\n    switch (i) {\n      case 0:\n        return \"Bill Receive\";\n\n      case 1:\n        return \"Quality\";\n\n      case 2:\n        return \"Purchase\";\n\n      case 3:\n        return \"Order To Collection\";\n\n      default:\n        return \"Undefined\";\n    }\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["StatsWindow","Frame","Dashboard","props","mod","restruct","final","forEach","m","i","push","gName","c","mod_list","g1","g2","g3","g4","g5","m1","m2","m3","m4","m5","m6","m7","m8","indexOf","mArr"],"sources":["C:/Users/shoaibkn/Documents/projects/app/client/src/pages/dashboard.js"],"sourcesContent":["import StatsWindow from \"../components/stats-window\";\r\nimport Frame from \"../components/frame\";\r\n\r\nexport default function Dashboard(props) {\r\n  let mod = restruct(1);\r\n  let final = [];\r\n\r\n  mod.forEach((m, i) => final.push(<Frame values={m} name={gName(i)} />));\r\n  return (\r\n    <div>\r\n      <StatsWindow />\r\n      {final}\r\n    </div>\r\n  );\r\n}\r\n\r\n//use module names passed as a prop to structure and create dashboard frames\r\n//function to break the mod_list array and restructure in different module types\r\n\r\nfunction restruct(c) {\r\n  //populate this array using sql\r\n  let mod_list = [\r\n    \"Bill Receive Form\",\r\n    \"W/O Bill Receive Form\",\r\n    \"Courier In\",\r\n    \"Courier Out\",\r\n    \"GRN Tasks\",\r\n    \"Store Tasks\",\r\n    \"Accounts Tasks\",\r\n    \"Pending Bills Report\",\r\n    \"Material Quality Feedback\",\r\n    \"Quality Passing/Rejection\",\r\n    \"Quality Feedback Report\",\r\n    \"PO To Delivery FMS\",\r\n    \"Order To PO FMS\",\r\n    \"Projection Email\",\r\n    \"Pending Material For PO Report\",\r\n    \"Pending Material For Projection\",\r\n    \"Order To Collection FMS\",\r\n    \"Tasks\",\r\n    \"Pending Tasks Report\",\r\n  ];\r\n\r\n  let g1 = [];\r\n  let g2 = [];\r\n  let g3 = [];\r\n  let g4 = [];\r\n  let g5 = [];\r\n  let m1 = [\r\n    \"Bill Receive Form\",\r\n    \"W/O Bill Receive Form\",\r\n    \"Courier In\",\r\n    \"Courier Out\",\r\n    \"Bill Transfer Note\",\r\n    \"Bill Receive Note\",\r\n    \"GRN Tasks\",\r\n    \"Store Tasks\",\r\n    \"Accounts Tasks\",\r\n    \"Pending Bills Report\",\r\n  ];\r\n  let m2 = [\r\n    \"Material Quality Feedback\",\r\n    \"Quality Passing/Rejection\",\r\n    \"Quality Feedback Report\",\r\n  ];\r\n  let m3 = [\r\n    \"PO To Delivery FMS\",\r\n    \"Order To PO FMS\",\r\n    \"Projection Email\",\r\n    \"Pending Material For PO Report\",\r\n    \"Pending Material For Projection\",\r\n  ];\r\n  let m4 = [\"Order To Collection FMS\", \"Tasks\", \"Pending Tasks Report\"];\r\n  let m5 = [];\r\n  let m6 = [];\r\n  let m7 = [];\r\n  let m8 = [];\r\n\r\n  mod_list.forEach((mod) => {\r\n    if (m1.indexOf(mod) >= 0) {\r\n      g1.push(mod);\r\n    } else if (m2.indexOf(mod) >= 0) {\r\n      g2.push(mod);\r\n    } else if (m3.indexOf(mod) >= 0) {\r\n      g3.push(mod);\r\n    } else if (m4.indexOf(mod) >= 0) {\r\n      g4.push(mod);\r\n    } else if (m5.indexOf(mod) >= 0) {\r\n      g5.push(mod);\r\n    }\r\n  });\r\n  let mArr = [g1, g2, g3, g4];\r\n  switch (c) {\r\n    case 1:\r\n      return mArr;\r\n    case 2:\r\n      return mArr[1];\r\n    default:\r\n      return \"Invalid\";\r\n  }\r\n}\r\n\r\nfunction gName(i) {\r\n  {\r\n    switch (i) {\r\n      case 0:\r\n        return \"Bill Receive\";\r\n      case 1:\r\n        return \"Quality\";\r\n      case 2:\r\n        return \"Purchase\";\r\n      case 3:\r\n        return \"Order To Collection\";\r\n      default:\r\n        return \"Undefined\";\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}